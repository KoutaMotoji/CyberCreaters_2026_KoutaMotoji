//===============================================================================
//
//  C++使った2D(watermelon.cpp)
//								制作：元地弘汰
// 
//===============================================================================
#include "lockon_enemy.h"

#include "manager.h"


//==========================================================================================
//コンストラクタ
//==========================================================================================
CLockonEnemy::CLockonEnemy()
{
	int nIdx = CManager::GetInstance()->GetTexture()->Regist("data\\TEXTURE\\reticle002.png");
	BindTexture(CManager::GetInstance()->GetTexture()->GetAddress(nIdx));

}

//==========================================================================================
//デストラクタ
//==========================================================================================
CLockonEnemy::~CLockonEnemy()
{

}

//==========================================================================================
//初期化処理
//==========================================================================================
void CLockonEnemy::Init()
{
	CObject::SetType(TYPE_BILLBOARD);
	CBillboard::Init();
}

//==========================================================================================
//終了処理
//==========================================================================================
void CLockonEnemy::Uninit()
{
	CBillboard::Uninit();
}

//==========================================================================================
//更新処理
//==========================================================================================
void CLockonEnemy::Update()
{
	CBillboard::Update();
}

//==========================================================================================
//描画処理
//==========================================================================================
void CLockonEnemy::Draw()
{
	CBillboard::Draw();
}

//==========================================================================================
//生成処理
//==========================================================================================
CLockonEnemy* CLockonEnemy::Create(D3DXVECTOR3 pos)
{
	CLockonEnemy* loe = new CLockonEnemy;

	loe->SetPolygonParam(pos, POLY_RADIUS, POLY_RADIUS);
	loe->Init();

	return loe;
}

